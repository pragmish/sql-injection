SQL injection UNION attacks

When an application is vulnerable to SQL injection, and the results of the query are returned within the application's responses, you can use the UNION keyword to retrieve data from other tables within the database. This is commonly known as a SQL injection UNION attack.

The UNION keyword enables you to execute one or more additional SELECT queries and append the results to the original query. For example:

SELECT a, b FROM table1 UNION SELECT c, d FROM table2
This SQL query returns a single result set with two columns, containing values from columns a and b in table1 and columns c and d in table2.

================
For a UNION query to work, two key requirements must be met:

The individual queries must return the same number of columns.
The data types in each column must be compatible between the individual queries.
To carry out a SQL injection UNION attack, make sure that your attack meets these two requirements. This normally involves finding out:

How many columns are being returned from the original query.
Which columns returned from the original query are of a suitable data type to hold the results from the injected query.

==================
When you perform a SQL injection UNION attack, there are two effective methods to determine how many columns are being returned from the original query.

One method involves injecting a series of ORDER BY clauses and incrementing the specified column index until an error occurs.




==================

Lab: SQL injection UNION attack, determining the number of columns returned by the query

SQLi vulnerability in Product category filter

To solve the lab, determine the number of columns returned by the query by performing a SQL injection UNION attack that returns an additional row containing null values.

===================

Background

- Union Rules

1. The number and order of the columns must be the same in all queries
2. Data types must be compatible

SQLi attack (Way 1 of solving):

select ? from table1 UNION select null
above query means, 
? - columns in table1 (product, username, gifts)
select Null - one column with one row of Null
select Null, Null - 2 column with one row of Null

Now we have already mentioned, Union is only successful if 2 rules match. For this union to work, first rule should match i.e. number of cols must be same.

Hence keep increasing Null till we get a successful 200 code which means we have a match else incorrect number of columns


SQLi attack (Way 2 of solving):
Order by sets order of column in ascending or decending order, so if there is no column nothing left to perform this application

select a,b from table1 order by 1 --> 200
select a,b from table1 order by 2 --> 200
Keep increasing order by value till we get an error which mean no more columns to order by

